apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "elasticsearch.fullname" . }}-data
  labels:
    app.kubernetes.io/name: {{ include "elasticsearch.name" . }}-data
    helm.sh/chart: {{ include "elasticsearch.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.data.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "elasticsearch.name" . }}-data
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "elasticsearch.fullname" . }}-data
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "elasticsearch.name" . }}-data
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "elasticsearch.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "bash"
            - "-c"
            - "ulimit -l unlimited && sysctl -w vm.max_map_count=262144 && exec su elasticsearch docker-entrypoint.sh"
          ports:
            - name: data
              containerPort: 9200
              protocol: TCP
            - name: discovery
              containerPort: 9300
              protocol: TCP
          env:
            - name: "cluster.name"
              value: "elasticsearch-cluster"
            - name: "bootstrap.memory_lock"
              value: "true"
            - name: "discovery.zen.ping.unicast.hosts"
              value: "{{ include "elasticsearch.fullname" . }}-discovery"
            - name: "node.master"
              value: "false"
            - name: "node.data"
              value: "true"
            - name: "node.ingest"
              value: "true"
            - name: "ES_JAVA_OPTS"
              value: "-Xms1024m -Xmx1024m"
          volumeMounts:
            - name: elasticsearch-data-volume
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: data
            initialDelaySeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            privileged: true
      securityContext:
        fsGroup: 1000
{{- if .Values.data.persistence.enable }}
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "{{ .Values.data.persistence.storageClass }}"
        resources:
          requests:
            storage: {{ .Values.data.persistence.size }}
{{- else }}
      volumes:
        - name: elasticsearch-data-volume
          emptyDir: {}
{{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
